// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Locatie {
  id       Int @id @default(autoincrement())
  ip       String
  lat      String
  lng      String
  acc      String
  viteza   String
  directie String
  ora_data DateTime
  user     User?    @relation(fields: [userID], references: [id])
  userID   Int? 
  thjuc    THJucator?    @relation(fields: [thjucID], references: [id])
  thjucID  Int? 
  ind      THIndiciu?    @relation(fields: [indID], references: [id])
  indID    Int? @unique
}

model IP{
  id        Int @id @default(autoincrement())
  
  ip        String @unique
  data_ora  DateTime @default(now())

  devices   Device[]
}

model Device{
  id                  Int    @id @default(autoincrement())
  userAgent           String?
  hardwareConcurrency Int?
  language            String?
  maxTouchPoints      Int?
  platform            String?
  vendor              String?
  ips                 IP[]
  ultimaActiune       DateTime @default(now())
  dataCreare          DateTime @default(now())
  user                User?  @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId              Int?
  jucator             THJucator?  @relation(fields: [jucatorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  jucatorId           Int?
}

model User {
  id              Int @id @default(autoincrement())
  email           String  @unique
  
  sid             String @unique @default(cuid())
  rid             String? @default(uuid())

  sauth           String? @default("")
  key             String? @default("")
  iv              String? @default("")

  nume            String?
  telefon         String? @unique
  data_nasterii   DateTime?
  poza            String?

  grad            Grad @default(NEAPROBAT)
  departament     Departament @default(NEREPARTIZAT)

  locatii         Locatie[]

  incredere       Int @default(0)

  participari     Participare[]

  feedback        Feedback?

  feedbackSedinte FeedbackSedinta[]
  feedbackEchipa  FeedbackEchipa[]

  deviceuri       Device[]


  primaLogare     DateTime @default(now())
  ultimaActiune   DateTime @default(now())
}

model Sedinta {
  id          Int @id @default(autoincrement())
  titlu       String
  desc        String?
  data_ora    DateTime
  durata      Float
  departament Departament
  ref         Int @default(-1)
  recurenta   Boolean @default(false)


  participari Participare[]
}

model Participare {
  id        Int @id @default(autoincrement())

  data_ora  DateTime @default(now())

  anulat    Boolean @default(false)
  prezent   Boolean @default(false)

  sedinta   Sedinta? @relation(fields: [sedintaaId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sedintaaId Int?

  user      User? @relation(fields: [userrId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userrId    Int?
}

model Task {
  id          Int @id @default(autoincrement())

  titlu       String
  desc        String?

  rezolvatDe  String?
  rezolvat    Boolean @default(false)

  departament Departament
}


model Feedback{
  id      Int @id @default(autoincrement())

  user    User @relation(fields: [userId], references: [id])
  userId  Int @unique

  by      String

  fSkill  Int //cat de bun e pe departament
  fMuncit Int //cat de muncitor este
  fComuni Int //cat de bine comunica
  fSerios Int //cat de serios este
  fPersis Int //cat de persistent e
}

model FeedbackSedinta{
  id      Int @id @default(autoincrement())

  user    User @relation(fields: [userIdd], references: [id])
  userIdd  Int

  fAscult Int //ascultat
  fMuncit Int //muncit
  fInvat  Int //invatat
  fSimt   Int //simtit bine
  fAltele String? //altele
}

model FeedbackEchipa{
  id      Int @id @default(autoincrement())

  user    User @relation(fields: [userId], references: [id])
  userId  Int @unique

  fComunic  Int //boardul a comunicat
  fEficient Int //simt ca echipa este eficienta, nu este haos
  fActivit  Int //activitati constante(nu numai sedinte de departament)
  fComunit  Int //imi place comunitatea
  fAltele   String? //altele
}


enum Grad {
  IGNORAT
  NEAPROBAT
  VOLUNTAR
  SPONSOR
  MEMBRU
  PARTENER
  ALUMNI
  MENTOR
  BOARD
  TEAM_LEADER
  MINA
}

enum Departament {
  TOATE
  NEREPARTIZAT
  MECANICA
  PROGRAMARE
  DESIGN
  MEDIA
}

//---TREASUREHUNT---

model THJucator{
  id         Int    @id @default(autoincrement())
  sid        String @unique @default(cuid())
  cod        String
  capitan    String?
  nrJucatori Int
  nrTelefon  String?
  locatii    Locatie[]
  metas      THIndiciuMeta[]
  deviceuri  Device[]
  carti      THCarteMeta[]
  feedback   Int @default(-1)
}

model THCarteMeta{
  id        Int @id @default(autoincrement())
  jucator   THJucator?  @relation(fields: [jucatorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  jucatorId Int?
  carte     THCarte?  @relation(fields: [carteId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  carteId   Int?
}

model THCarte{
  id        Int @id @default(autoincrement())
  raritate  Int
  minPutere Int
  maxPutere Int
  minVieti  Int
  maxVieti  Int
  entitate  Entitate
  metas     THCarteMeta[]
}

enum Entitate {
  VAMPIR
  VARCOLAC
}

model THIndiciu{
  id         Int @id @default(autoincrement())
  creator    String
  intrebare  String
  raspuns    String
  poza       String
  arataPoza  Boolean @default(false)
  arataForma Boolean @default(false)
  locatie    Locatie?
  metas      THIndiciuMeta[]
}

model THIndiciuMeta{
  id           Int       @id @default(autoincrement())
  timp         DateTime?
  timpRezolvat DateTime?
  rezolvat     Boolean @default(false)
  sarit        Boolean @default(false)
  jucator      THJucator?  @relation(fields: [jucatorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  indiciu      THIndiciu?  @relation(fields: [indiciuId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  jucatorId    Int?
  indiciuId    Int?
}










// ---TREASUREHUNT VECHI---

model Jucator{
  id            Int    @id @default(autoincrement())
  sid           String @unique @default(cuid())
  nume          String?
  creator       String
  start         Muzeu
  telefon       String?
  viteza        Float @default(0)
  muzee         Json
  indicii       IndiciuMeta[]
  feedback      Int @default(-1)
}

model IndiciuMeta{
  id           Int       @id @default(autoincrement())
  timp         DateTime?
  timpRezolvat DateTime?
  rezolvat     Boolean @default(false)
  sarit        Boolean @default(false)
  jucator      Jucator?  @relation(fields: [jucatorId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  indiciu      Indiciu?  @relation(fields: [indiciuId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  jucatorId    Int?
  indiciuId    Int?
}

model Indiciu{
  id Int @id @default(autoincrement())
  creator String
  intrebare String
  raspuns String
  poza String @db.LongText
  arataPoza Boolean @default(false)
  arataForma Boolean @default(false)
  lat String
  lng String
  acc String
  etaj      Etaj?  @relation(fields: [etajID], references: [id], onUpdate: Cascade, onDelete: Cascade)
  etajID    Int?
  jucatori IndiciuMeta[]
}

model Etaj {
  id Int @id @default(autoincrement())
  muzeu Muzeu
  etaj String
  indiciI Indiciu[]
}

model Prajitura {
  id Int @id @default(autoincrement())
  jucatorID Int @unique
  nume String
  acceptat Boolean @default(false)
}

enum Muzeu {
  AVRAMIDE
  ACVARIU
  ARTA
  ISTORIE
}